version: '3.5'
services:
    # Service for traefik
    traefik:
        image: traefik:2.0
        command: 
            # Entrypoint by name web is created with port 80. Traefik will listen on this port for all application
            - --entrypoints.web.address=:80
            # Entrypoint for secure connecion on https
            - --entrypoints.ws.address=:443
            # Log level of traefik container set to INFO
            - --log.level=INFO
            # A docker provider is set for treafik.
            - --providers.docker
            # Traefik won't register all the container on given docker instance
            - --providers.docker.exposedbydefault=false
            # Run traefik API on insecure protocol
            - --api
            - --providers.file.directory=/config/
            - --providers.file.watch
        ports:
            # Traefik port 80 mapped on host OS port 9090
            - "9090:80"
            # Traefik port for https
            - "443:443"
        volumes: 
            # Volume mapping of docker.sock, Traefik will automatically listen all the container on this socket
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/:/config/
        labels:            
            traefik.enable: true
            # Creating router for catching all the requests in order to redirect them to https if it's http.
            traefik.http.routers.http_catchall.rule: hostregexp(`{host:.+}`)
            traefik.http.routers.http_catchall.entrypoints: web
            traefik.http.routers.http_catchall.middlewares: redirect_https@file

            # Dashboard settings
            # A valid endpoint for dashbaord
            traefik.http.routers.traefik.rule: host(`app3.net`)
            # Expose secure endpoint (https)
            traefik.http.routers.traefik.entrypoints: ws
            # Set the tls flag to true to let traefik know that this endpoint is exposed as https and redirect all http traffic to https one.
            traefik.http.routers.traefik.tls: true
            # In order to redirect all api traffic set it to this new router.
            traefik.http.routers.traefik.service: api@internal
    app1:
        # whoami will list the IP address of this container
        image: containous/whoami
        labels: 
            # Treafik will be entertain this container by setting it to true
            traefik.enable: true
            # web entrypoint is set for this container, It will listen on port 9090 as this port is mapped to traefik port 80.
            traefik.http.routers.app1.entrypoints: ws
            # Enable tls for this container as we have set entry point as websecure(ws)
            traefik.http.routers.app1.tls: true
            # Traefik will redirect all traffic to this container when request with following url is received.
            traefik.http.routers.app1.rule: Host(`app1.net`)
            # Set middleware defined in middlewares section
            traefik.http.routers.app1.middlewares: auth@file

    app2:
        image: containous/whoami
        labels: 
            traefik.enable: true
            traefik.http.routers.app2.entrypoints: ws
            traefik.http.routers.app2.tls: true
            traefik.http.routers.app2.rule: Host(`app2.net`)
            traefik.http.routers.app2.middlewares: auth@file